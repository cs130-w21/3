{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/blog.service.ts","webpack:///src/app/edit/edit.component.ts","webpack:///src/app/edit/edit.component.html","webpack:///src/app/list/list.component.ts","webpack:///src/app/list/list.component.html","webpack:///src/app/preview/preview.component.ts","webpack:///src/app/preview/preview.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","Post","providedIn","BlogService","http","username","parseJWT","getCookie","usr","console","log","url","get","subscribe","data","posts","postid","thisPost","error","status","post","body","next","fetchPosts","put","currentDraft","name","i","document","cookie","indexOf","charAt","length","token","base64Url","split","base64","replace","JSON","parse","atob","EditComponent","blogService","router","activatedRoute","paramMap","getPost","Number","snapshot","getCurrentDraft","val","setCurrentDraft","newPost","location","reload","updatePost","navigate","deletePost","ListComponent","sort","compare","newPostId","Date","event","clickedNewPost","a","b","aPostId","bPostId","comparison","PreviewComponent","parser","renderer","markdownTitle","render","markdownBody","onClickEdit","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditComponent } from './edit/edit.component';\nimport { PreviewComponent } from './preview/preview.component';\n\nconst routes: Routes = [\n  { path: 'edit/:id', component: EditComponent },\n  { path: 'preview/:id', component: PreviewComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes, {useHash: true}) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular Blog';\n}\n","<div id=\"head\">\n  <h2>{{ title }} Home Page</h2>\n</div>\n<div id=\"left\">\n  <app-list></app-list>\n</div>\n<div id=\"right\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { BlogService } from './blog.service';\nimport { ListComponent } from './list/list.component';\nimport { EditComponent } from './edit/edit.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { PreviewComponent } from './preview/preview.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    EditComponent,\n    PreviewComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [BlogService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class Post {\n  postid: number;\n  created: Date;\n  modified: Date;\n  title: string;\n  body: string;\n}\n\n@Injectable()\nexport class BlogService {\n  private posts: Post[];\n  private currentDraft: Post;\n  username: string;\n\n  constructor(private http: HttpClient) {\n    this.username = parseJWT(getCookie()).usr;\n    console.log(this.username);\n    console.log(\"NEW COMMENT\");\n  }\n\n  fetchPosts(): Promise<Post[]> {\n    return new Promise((resolve) => {\n      let url = '/api/' + this.username;\n      this.http.get<Post[]>(url)\n                .subscribe(data => {\n                                  this.posts = data;\n                                  resolve(this.posts);\n                                  console.log(\"inside fetchposts\" + this.posts);\n                      })\n    });\n  }\n\n  getPost(postid: number): Promise<Post> {\n    return new Promise((resolve) => {\n      let url = '/api/' + this.username + '/' + postid;\n      let thisPost: Post = null;\n      console.log(\"inside get post in blog service\");\n      this.http.get<Post>(url).subscribe(data => {\n                                  thisPost = data;\n                                  resolve(thisPost);\n                                  console.log(\"inside getpost\" + thisPost);\n                                }, error => {\n                                  if (error.status == 404) {\n                                    resolve(null);\n                                  }\n                                });\n    });\n  }\n\n  newPost(post: Post): Promise<void> {\n    return new Promise((resolve) => {\n      let url = '/api/' + this.username + '/' + post.postid;\n      this.http.post<Post>(url, {title: post.title, body: post.body}).subscribe(\n                            next => console.log(\"successful new post\"),\n                            error => {\n                              if (error.status == 201) {\n                                console.log(\"successful create post\");\n                              } else {\n                                console.log(\"error creating post\");\n                              }\n                            }\n                          );\n      this.fetchPosts();\n    });\n  }\n\n  updatePost(post: Post): Promise<void> {\n    return new Promise((resolve) => {\n      let url = '/api/' + this.username + '/' + post.postid;\n      console.log('heres the username ' + this.username + ' and the post id' + post.postid + post.title);\n      this.http.put<Post>(url, {title: post.title, body: post.body}).subscribe(\n                          next => console.log(\"successful update post\"),\n                          error => {\n                            if (error.status == 200) {\n                              console.log(\"successful update post\");\n                            } else {\n                              console.log(\"error updating post\");\n                            }\n                          }\n                        );\n      this.fetchPosts();\n    });\n  }\n\n  deletePost(postid: number): Promise<void> {\n    return new Promise((resolve) => {\n      let url = '/api/' + this.username + '/' + postid;\n      this.http.delete<Post>(url).subscribe(\n                          next => console.log(\"successful delete\"),\n                          error => {\n                            if (error.status == 204) {\n                              console.log(\"successful delete post\");\n                            } else {\n                              console.log(\"error deleting post\");\n                            }\n                          }\n                        );\n      this.fetchPosts();\n    });\n  }\n\n  setCurrentDraft(post: Post): void {\n    this.currentDraft = post;\n  }\n\n  getCurrentDraft(): Post {\n    return this.currentDraft;\n  }\n}\n\nfunction getCookie() {\n  var name = 'jwt=';\n  var i = document.cookie.indexOf(name);\n  var cookie = '';\n  if (i != -1) {\n    i = i + 4;\n    while(document.cookie.charAt(i) != ';' && i < document.cookie.length) {\n      cookie = cookie + document.cookie.charAt(i);\n      i++;\n    }\n  }\n  return cookie;\n}\n\nfunction parseJWT(token)\n{\n  let base64Url = token.split('.')[1];\n  let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  return JSON.parse(atob(base64));\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Post, BlogService } from '../blog.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  @Input() post: Post;\n\n  constructor(private blogService: BlogService, private router: Router, private activatedRoute: ActivatedRoute,) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe(() => this.getPost());\n    console.log(\"this is the post in init\");\n  }\n\n  getPost(): void {\n    let id = Number(this.activatedRoute.snapshot.paramMap.get('id'));\n    this.post = this.blogService.getCurrentDraft();\n    if (!this.post) {\n      console.log(\"get current draft returned null, searching post id\");\n      this.blogService.getPost(id)\n                      .then((val) => {\n                        console.log(\"inside get post\");\n                        this.blogService.setCurrentDraft(val);\n                        this.post = val;\n                        console.log(\"heres the post\" + this.post);\n                      });\n    } else if (this.post.postid != id) {\n      console.log(\"get current draft returned different id, searching post id\");\n      this.blogService.getPost(id)\n                      .then((val) => {\n                        this.blogService.setCurrentDraft(val);\n                        this.post = val;\n                      });\n    }\n    console.log(\"this is the post in get post in edit\");\n  }\n\n  onClickSave(): void {\n    this.blogService.getPost(this.post.postid)\n                      .then((val) => {\n                        if (val == null) {\n                          this.blogService.newPost(this.post)\n                                            .then((val) => {\n                                              this.blogService.setCurrentDraft(this.post);\n                                            });\n                          location.reload();\n                        } else {\n                          this.blogService.updatePost(this.post)\n                                          .then();\n                          location.reload();\n                        }\n                      });\n  }\n\n  onClickPreview(): void {\n    this.blogService.setCurrentDraft(this.post);\n    this.router.navigate(['preview', this.post.postid]);\n  }\n\n  onClickDelete(): void {\n    this.blogService.deletePost(this.post.postid)\n                    .then(next => {\n                      console.log(\"successful delete\");\n                      this.router.navigate(['/']);\n                    });\n  }\n}\n","<div *ngIf=\"post\">\n  <form>\n  <div>\n    <p><label for=\"title\">TITLE</label></p>\n    <input type=\"text\" [(ngModel)]=\"post.title\" [ngModelOptions]=\"{standalone: true}\">\n  </div>\n  <div>\n    <p><label for=\"body\">BODY</label></p>\n    <textarea [(ngModel)]=\"post.body\" [ngModelOptions]=\"{standalone: true}\"></textarea>\n  </div>\n  <p>Last modified: {{post.modified | date:'medium'}}</p>\n  <a (click)=\"onClickSave()\">save</a>\n  <a (click)=\"onClickPreview()\">preview</a>\n  <a (click)=\"onClickDelete()\">delete</a>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Post, BlogService } from '../blog.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  posts: Post[];\n\n  constructor(private blogService: BlogService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.blogService.fetchPosts()\n                    .then((val) => {\n                      this.posts = val;\n                      console.log(this.posts[0]);\n                    });\n  }\n\n  clickedNewPost(): void {\n    if (this.posts) {this.posts.sort(compare);}\n    let newPostId = this.posts[this.posts.length-1].postid + 1;\n    let post: Post = { 'postid': newPostId, 'created': new Date(), 'modified': new Date(), 'title': '', 'body': '' };\n    this.blogService.setCurrentDraft(post);\n    this.router.navigate(['edit', post.postid]);\n  }\n\n  onPostClick(event, post) {\n    console.log(\"here with clicked post \" + post.postid);\n    this.blogService.setCurrentDraft(post);\n    this.router.navigate(['edit', post.postid]);\n    this.blogService.fetchPosts()\n                    .then((val) => {\n                        this.posts = val;\n                        console.log(\"fetched posts after clicked one\");\n                    });\n  }\n}\n\n// compare function for sorting results\nfunction compare(a, b) {\n  const aPostId = a.postid;\n  const bPostId = b.postid;\n\n  let comparison = 0;\n  if (aPostId > bPostId) {\n    comparison = 1;\n  } else if (aPostId < bPostId) {\n    comparison = -1;\n  }\n  return comparison;\n}\n","<button (click)=\"clickedNewPost()\">New Post</button>\n<ul *ngIf=\"posts\">\n      <a *ngFor=\"let post of posts\" (click)=\"onPostClick($event, post)\">\n        <li>{{post.title}}\n          <p>{{post.created | date:'medium'}}</p>\n        </li>\n      </a>\n</ul>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Parser, HtmlRenderer } from 'commonmark';\nimport { Post, BlogService } from '../blog.service';\n\n@Component({\n  selector: 'app-preview',\n  templateUrl: './preview.component.html',\n  styleUrls: ['./preview.component.css']\n})\nexport class PreviewComponent implements OnInit {\n  post: Post;\n  parser: Parser;\n  renderer: HtmlRenderer;\n  markdownTitle: string;\n  markdownBody: string;\n\n  constructor(private blogService: BlogService, private router: Router, private activatedRoute: ActivatedRoute,) { }\n\n  ngOnInit(): void {\n    this.parser = new Parser()\n    this.renderer = new HtmlRenderer();\n    this.activatedRoute.paramMap.subscribe(() => this.getPost());\n  }\n\n  getPost(): void {\n    let id = Number(this.activatedRoute.snapshot.paramMap.get('id'));\n    this.post = this.blogService.getCurrentDraft();\n    if (!this.post) {\n      console.log(\"get current draft returned null, searching post id\");\n      this.blogService.getPost(id)\n                      .then((val) => {\n                        this.blogService.setCurrentDraft(val);\n                        this.post = val;\n                        this.markdownTitle = this.renderer.render(this.parser.parse(this.post.title));\n                        this.markdownBody = this.renderer.render(this.parser.parse(this.post.body));\n                        console.log(\"this is the post in get post in edit\");\n                      });\n    } else if (this.post.postid != id) {\n      console.log(\"get current draft returned different id, searching post id\");\n      this.blogService.getPost(id)\n                      .then((val) => {\n                        this.blogService.setCurrentDraft(val);\n                        this.post = val;\n                        this.markdownTitle = this.renderer.render(this.parser.parse(this.post.title));\n                        this.markdownBody = this.renderer.render(this.parser.parse(this.post.body));\n                        console.log(\"this is the post in get post in edit\");\n                      });\n    } else {\n      this.markdownTitle = this.renderer.render(this.parser.parse(this.post.title));\n      this.markdownBody = this.renderer.render(this.parser.parse(this.post.body));\n      console.log(\"this is the post in get post in edit\");\n    }\n  }\n\n  onClickEdit(): void {\n    this.router.navigate(['edit', this.post.postid]);\n  }\n}\n","<span class=\"previewtile\">\n  <div *ngIf=\"markdownTitle\">\n    <div [innerHTML]=\"markdownTitle\">></div>\n  </div>\n  <div *ngIf=\"markdownBody\">\n    <div [innerHTML]=\"markdownBody\"></div>\n  </div>\n  <button type=\"button\" (click)=\"onClickEdit()\">Edit</button>\n</span>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}